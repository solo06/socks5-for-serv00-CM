name: Execute SSH Commands

on:
  workflow_dispatch: # 手动触发工作流
  schedule:
    - cron: "30 0,13 * * *"  # 每天 北京时间 早8点30分 晚9点30分 各运行一次

jobs:
  execute-commands:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSHPass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Get ACCOUNTS_JSON
        id: get-accounts
        run: |
          echo "$ACCOUNTS_JSON" > accounts.json
        env:
          ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}
        # 从 GitHub Secrets 获取 ACCOUNTS_JSON 变量，并保存到文件 accounts.json

      - name: Generate SSH Commands
        id: generate-ssh-commands
        run: |
          echo "#!/bin/bash" > sshpass.sh
          echo "result_log=ssh_results.log" > sshpass.sh
          echo "> \$result_log" >> sshpass.sh
          while IFS= read -r account; do
            username=$(echo "$account" | jq -r '.username')
            password=$(echo "$account" | jq -r '.password')
            ssh=$(echo "$account" | jq -r '.ssh')

            echo "echo \"尝试登录 $username@$ssh...\"" >> sshpass.sh
            echo "current_time=\$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> sshpass.sh
            echo "if sshpass -p '$password' ssh -o StrictHostKeyChecking=no '$username@$ssh' 'bash <(curl -s https://raw.githubusercontent.com/cmliu/socks5-for-serv00/main/check_cron.sh)'; then" >> sshpass.sh
            echo "  echo \"服务器名称：$ssh\n登录时间：\$current_time\n状态：✅ 登录成功\" >> \$result_log" >> sshpass.sh
            echo "else" >> sshpass.sh
            echo "  echo \"服务器名称：$ssh\n登录时间：\$current_time\n状态：❌ 登录失败\" >> \$result_log" >> sshpass.sh
            echo "fi" >> sshpass.sh
          done < <(jq -c '.[]' accounts.json)
          chmod +x sshpass.sh

      - name: Execute SSH Commands
        id: execute-commands
        run: ./sshpass.sh

      - name: Send Telegram notifications for each server
        run: |
          while IFS= read -r line; do
            server_status=$(echo "$line")
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
              -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
              -d text="$server_status"
          done < ssh_results.log
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
